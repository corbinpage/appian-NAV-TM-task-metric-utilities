<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<contentHaul xmlns:a="http://www.appian.com/ae/types/2009">
    <rule>
        <name>NAV_TM_returnBasicTaskMetricsByTaskIds</name>
        <uuid>c7c69b90-4196-4dd6-8cc2-a490bba1672e</uuid>
        <description>Returns the taskId and id for the given task ids and converts them into NAV_TM_TaskMetric CDTs</description>
        <parentUuid>_a-0000db6c-eae6-8000-927a-010000010000_48230</parentUuid>
        <visibility>
            <advertise>false</advertise>
            <hierarchy>true</hierarchy>
            <indexable>true</indexable>
            <quota>false</quota>
            <searchable>true</searchable>
            <system>false</system>
            <unlogged>false</unlogged>
        </visibility>
        <definition>#&quot;SYSTEM_SYSRULES_queryEntity&quot;(
  entity: #&quot;_a-0000db61-5af0-8000-4594-010000010000_30797&quot;,
  query: #&quot;SYSTEM_SYSRULES_query&quot;(
    selection: #&quot;SYSTEM_SYSRULES_querySelection&quot;(columns: {
      #&quot;SYSTEM_SYSRULES_queryColumn&quot;(field: &quot;id&quot;),
      #&quot;SYSTEM_SYSRULES_queryColumn&quot;(field: &quot;taskId&quot;),
      #&quot;SYSTEM_SYSRULES_queryColumn&quot;(field: &quot;createdAt&quot;)
    }),
    logicalExpression: #&quot;SYSTEM_SYSRULES_queryLogicalExpression&quot;(
    operator: &quot;AND&quot;,
    filters: {
      #&quot;SYSTEM_SYSRULES_queryFilter&quot;(field: &quot;taskId&quot;, operator: &quot;in&quot;, value: ri!taskIds)
    }
  ),
    pagingInfo: topagingInfo(1,-1)
  )
).data</definition>
        <namedTypedValue>
            <name>taskIds</name>
            <type>
                <name>Text?list</name>
                <namespace>http://www.appian.com/ae/types/2009</namespace>
            </type>
        </namedTypedValue>
        <preferredEditor>interface</preferredEditor>
        <offlineEnabled>false</offlineEnabled>
    </rule>
    <roleMap public="true">
        <role allowForAll="false" inherit="true" name="readers">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="true" name="authors">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="true" name="administrators">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyReaders">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyAuthors">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyAdministrators">
            <users/>
            <groups/>
        </role>
    </roleMap>
</contentHaul>
